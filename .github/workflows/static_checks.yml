name: ðŸ“Š Static Checks
on: [push, pull_request]

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-static
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  static-checks:
    name: Static Checks (clang-format, black format, file format, documentation checks)
    runs-on: ubuntu-20.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # v2.5.1
        with:
          egress-policy: audit

      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.5.2
        with:
          repository: v-sekai/godot
          ref: groups-4.x.2023-02-16T003047Z

      - name: Install dependencies
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo apt-add-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-15 main"
          sudo apt-get install -qq dos2unix clang-format-15 libxml2-utils python3-pip moreutils
          sudo update-alternatives --remove-all clang-format || true
          sudo update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-15 100
          sudo pip3 install black==22.3.0 pygments pytest==7.1.2 mypy==0.971

      - name: File formatting checks (file_format.sh)
        run: |
          bash ./misc/scripts/file_format.sh

      - name: Header guards formatting checks (header_guards.sh)
        run: |
          bash ./misc/scripts/header_guards.sh

      - name: Python style checks via black (black_format.sh)
        run: |
          bash ./misc/scripts/black_format.sh

      - name: Python scripts static analysis (mypy_check.sh)
        run: |
          bash ./misc/scripts/mypy_check.sh

      - name: Python builders checks via pytest (pytest_builders.sh)
        run: |
          bash ./misc/scripts/pytest_builders.sh

      - name: JavaScript style and documentation checks via ESLint and JSDoc
        run: |
          cd platform/web
          npm ci
          npm run lint
          npm run docs -- -d dry-run

      - name: Class reference schema checks
        run: |
          xmllint --noout --schema doc/class.xsd doc/classes/*.xml modules/*/doc_classes/*.xml

      - name: Documentation checks
        run: |
          doc/tools/make_rst.py --dry-run --color doc/classes modules
